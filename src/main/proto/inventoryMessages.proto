syntax = "proto3";

option java_package = "dullblade.inventory";

message Reliquary {
  uint32 level = 1;
  uint32 exp = 2;
  uint32 promote_level = 3;
  uint32 main_prop_id = 4;
  repeated uint32 append_prop_id_list = 5;
}

message Weapon {
  uint32 level = 1;
  uint32 exp = 2;
  uint32 promote_level = 3;
  map<uint32, uint32> affix_map = 4;
}

message Equip {
  bool is_locked = 3;
  oneof detail {
    Reliquary reliquary = 1;
    Weapon weapon = 2;
  }
}

message Furniture {
  uint32 count = 1;
}

message MaterialDeleteInfo {
  bool has_delete_config = 1;
  oneof delete_info {
    CountDownDelete count_down_delete = 2;
    DateTimeDelete date_delete = 3;
    DelayWeekCountDownDelete delay_week_count_down_delete = 4;
  }

  message CountDownDelete {
    map<uint32, uint32> delete_time_num_map = 1;
    uint32 config_count_down_time = 2;
  }

  message DateTimeDelete {
    uint32 delete_time = 1;
  }

  message DelayWeekCountDownDelete {
    map<uint32, uint32> delete_time_num_map = 1;
    uint32 config_delay_week = 2;
    uint32 config_count_down_time = 3;
  }
}

message Material {
  uint32 count = 1;
  MaterialDeleteInfo delete_info = 2;
}

message Item {
  uint32 item_id = 1;
  uint64 guid = 2;
  oneof detail {
    Material material = 5;
    Equip equip = 6;
    Furniture furniture = 7;
  }
}

enum StoreType {
  NONE = 0;
  PACK = 1;
  DEPOT = 2;
}

// CmdId: 641
// EnetChannelId: 0
// EnetIsReliable: true
message StoreItemChangeNotify {
  StoreType store_type = 9;
  repeated Item item_list = 3;
}

// CmdId: 637
// EnetChannelId: 0
// EnetIsReliable: true
message StoreItemDelNotify {
  StoreType store_type = 14;
  repeated uint64 guid_list = 10;
}

// CmdId: 638
// EnetChannelId: 0
// EnetIsReliable: true
message WeaponPromoteRsp {
  int32 retcode = 11;
  uint64 target_weapon_guid = 15;
  uint32 old_promote_level = 5;
  uint32 cur_promote_level = 2;
}

message ItemParam {
  uint32 item_id = 1;
  uint32 count = 2;
}

// CmdId: 666
// EnetChannelId: 0
// EnetIsReliable: true
message CalcWeaponUpgradeReturnItemsRsp {
  int32 retcode = 5;
  uint64 target_weapon_guid = 10;
  repeated ItemParam item_param_list = 3;
}

// CmdId: 663
// EnetChannelId: 0
// EnetIsReliable: true
message WeaponUpgradeRsp {
  int32 retcode = 11;
  uint64 target_weapon_guid = 8;
  uint32 old_level = 4;
  uint32 cur_level = 7;
  repeated ItemParam item_param_list = 2;
}

message ItemHint {
  uint32 item_id = 1;
  uint32 count = 2;
  bool is_new = 3;
  uint64 guid = 4;
}

message Vector {
  float x = 1;
  float y = 2;
  float z = 3;
}

// CmdId: 632
// EnetChannelId: 0
// EnetIsReliable: true
message ItemAddHintNotify {
  repeated ItemHint item_list = 10;
  Vector position = 12;
  bool is_position_valid = 13;
  uint32 reason = 5;
  uint32 quest_id = 14;
  bool is_transfered_from_avatar_card = 11;
  repeated ItemHint overflow_transformed_item_list = 3;
  bool is_general_reward_hidden = 7;
}

// CmdId: 605
// EnetChannelId: 0
// EnetIsReliable: true
message SetEquipLockStateRsp {
  int32 retcode = 7;
  uint64 target_equip_guid = 13;
  bool is_locked = 5;
}

// CmdId: 619
// EnetChannelId: 0
// EnetIsReliable: true
message ReliquaryUpgradeRsp {
  int32 retcode = 1;
  uint64 target_reliquary_guid = 10;
  uint32 old_level = 5;
  uint32 cur_level = 6;
  uint32 power_up_rate = 2;
  repeated uint32 old_append_prop_list = 7;
  repeated uint32 cur_append_prop_list = 14;
}

// CmdId: 601
// EnetChannelId: 0
// EnetIsReliable: true
message WeaponAwakenRsp {
  int32 retcode = 3;
  uint64 target_weapon_guid = 1;
  uint32 target_weapon_awaken_level = 13;
  map<uint32, uint32> old_affix_level_map = 7;
  map<uint32, uint32> cur_affix_level_map = 14;
  uint64 avatar_guid = 10;
}

// CmdId: 631
// EnetChannelId: 0
// EnetIsReliable: true
message StoreWeightLimitNotify {
  StoreType store_type = 4;
  uint32 weight_limit = 2;
  uint32 material_count_limit = 1;
  uint32 weapon_count_limit = 5;
  uint32 reliquary_count_limit = 6;
  uint32 furniture_count_limit = 8;
}

// CmdId: 609
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerStoreNotify {
  StoreType store_type = 4;
  repeated Item item_list = 3;
  uint32 weight_limit = 15;
}

// CmdId: 624
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WeaponPromoteReq {
  uint64 target_weapon_guid = 6;
}

// CmdId: 686
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WeaponUpgradeReq {
  uint64 target_weapon_guid = 3;
  repeated uint64 food_weapon_guid_list = 8;
  repeated ItemParam item_param_list = 14;
}

// CmdId: 610
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message CalcWeaponUpgradeReturnItemsReq {
  uint64 target_weapon_guid = 9;
  repeated uint64 food_weapon_guid_list = 10;
  repeated ItemParam item_param_list = 14;
}

// CmdId: 606
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ReliquaryUpgradeReq {
  uint64 target_reliquary_guid = 5;
  repeated uint64 food_reliquary_guid_list = 15;
  repeated ItemParam item_param_list = 13;
}

// CmdId: 642
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WeaponAwakenReq {
  uint64 target_weapon_guid = 9;
  uint64 item_guid = 3;
  map<uint32, uint32> affix_level_map = 2;
}

// CmdId: 604
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetEquipLockStateReq {
  uint64 target_equip_guid = 10;
  bool is_locked = 11;
}

// CmdId: 635
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UseItemReq {
  uint64 guid = 1;
  uint32 count = 12;
  uint64 target_guid = 14;
  uint32 option_idx = 10;
  bool is_enter_mp_dungeon_team = 3;
}

// CmdId: 649
// EnetChannelId: 0
// EnetIsReliable: true
message UseItemRsp {
  int32 retcode = 15;
  uint64 guid = 8;
  uint32 item_id = 11;
  uint64 target_guid = 12;
  uint32 option_idx = 13;
}

message MaterialInfo {
  uint64 guid = 1;
  uint32 count = 2;
}

// CmdId: 678
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DestroyMaterialReq {
  repeated MaterialInfo material_list = 12;
}

// CmdId: 608
// EnetChannelId: 0
// EnetIsReliable: true
message DestroyMaterialRsp {
  int32 retcode = 9;
  repeated uint32 item_id_list = 11;
  repeated uint32 item_count_list = 10;
}

// CmdId: 673
// EnetChannelId: 0
// EnetIsReliable: true
message ForgeFormulaDataNotify {
  uint32 forge_id = 11;
  bool is_locked = 8;
}

// CmdId: 688
// EnetChannelId: 0
// EnetIsReliable: true
message CombineFormulaDataNotify {
  uint32 combine_id = 6;
  bool is_locked = 5;
}

// CmdId: 654
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message CombineReq {
  uint32 combine_id = 5;
  uint32 combine_count = 3;
  uint64 avatar_guid = 8;
}

// CmdId: 646
// EnetChannelId: 0
// EnetIsReliable: true
message CombineRsp {
  int32 retcode = 13;
  uint32 combine_id = 12;
  uint32 combine_count = 6;
  uint64 avatar_guid = 15;
  repeated ItemParam cost_item_list = 10;
  repeated ItemParam result_item_list = 2;
  repeated ItemParam total_random_item_list = 9;
  repeated ItemParam total_return_item_list = 4;
  repeated ItemParam total_extra_item_list = 8;
}

// CmdId: 661
// EnetChannelId: 0
// EnetIsReliable: true
message CombineDataNotify {
  repeated uint32 combine_id_list = 5;
}
